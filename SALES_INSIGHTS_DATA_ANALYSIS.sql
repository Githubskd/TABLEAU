USE SALES;

SHOW TABLES;

SELECT * FROM CUSTOMERS;  #--CUSTOMER_CODE, CUSTOMER_NAME, CUSTOMER_TYPE
SELECT DISTINCT(CUSTOMER_CODE) FROM CUSTOMERS;
SELECT COUNT(*) FROM CUSTOMERS;
SELECT DISTINCT(CUSTMER_NAME) FROM CUSTOMERS;
SELECT DISTINCT(COUNT(CUSTMER_NAME)) FROM CUSTOMERS;
SELECT DISTINCT(CUSTOMER_TYPE) FROM CUSTOMERS;
#-- FROM THE CUSTOMERS TABLE WE ANALYSE THAT THERE IS A COLUMN CUSTOMER_CODE WHERE NULL AND DUPLICATE VALUES ARE NOT PRESENT
#-- AS WELL AS IT WAS OBSERVED CUSTOMER NAME BEING UNIQUELY DIFFERENT, WHILE 2 TYPES OF CUSTOMER OBSERVED Brick & Mortar, E-Commerce


SELECT * FROM DATE; #-- DATE, CY_DATE, YEAR, MONTH_NAME, DATE_YY_MM
SELECT COUNT(*) FROM DATE; #-- 1126 -ROW COUNT
SELECT DISTINCT(YEAR) FROM DATE; #-- 2017,2018,2019,2020
SELECT YEAR, COUNT(*) AS CNT FROM DATE GROUP BY YEAR;

#CY_DATE IS BASSICALLY A START OF THE MONTH

SELECT * FROM MARKETS; #-- MARKETS_CODE, MARKETS_NAME, ZONE
SELECT COUNT(*) FROM MARKETS;
SELECT DISTINCT MARKETS_NAME FROM MARKETS;
SELECT DISTINCT(COUNT(*)) MARKETS_NAME FROM MARKETS;
SELECT DISTINCT ZONE FROM MARKETS; 

#-- HERE WE OBSERVED THAT MARKET DISTRIBUTED IN 3 ZONES (NORTH, SOUTH, CENTRAL)
#--& HAVING UNIQUE MARKET CODE AS WELL AS MARKET NAME, HENCE NO DUPLICATES FOUND IN MARKETS_CODE


SELECT * FROM PRODUCTS; #-- PRODUCT_CODE, PRODUCT_TYPE
SELECT DISTINCT(PRODUCT_CODE) FROM PRODUCTS;
SELECT COUNT(*) FROM PRODUCTS;
SELECT DISTINCT(PRODUCT_TYPE) FROM PRODUCTS; #-- OWN BRAND, DISTRIBUTION
SELECT PRODUCT_TYPE,COUNT(PRODUCT_TYPE) AS CNT FROM PRODUCTS
GROUP BY PRODUCT_TYPE;

#-- OBSERVED UNIQUE PRODUCT_CODE

SELECT * FROM TRANSACTIONS; #-- PRODUCT_CODE, CUSTOMER_CODE, MARKET_CODE, ORDER_DATE, SALES_QTY, SALES_AMOUNT, CURRENCY
SELECT count(DISTINCT(CUSTOMER_CODE)) FROM TRANSACTIONS;

SELECT * FROM TRANSACTIONS  T
INNER JOIN MARKETS M 
ON T.MARKET_CODE = M.MARKETS_CODE 
WHERE M.MARKETS_NAME = 'chennai';

## Show transactions in 2020 join by date table

SELECT transactions.*, date.* FROM transactions INNER JOIN date ON transactions.order_date=date.date where date.year=2020;

## Show total revenue in year 2020

SELECT SUM(transactions.sales_amount) FROM transactions 
INNER JOIN date 
ON transactions.order_date=date.date 
where date.year=2020 and transactions.currency="INR" or transactions.currency="USD";

## Show total revenue in year 2020, January Month,

SELECT SUM(transactions.sales_amount) 
FROM transactions INNER JOIN date 
ON transactions.order_date=date.date 
where date.year=2020 and  date.month_name="January" 
and (transactions.currency="INR" or transactions.currency="USD");

## Show total revenue in year 2020 in Chennai

SELECT SUM(transactions.sales_amount) 
FROM transactions INNER JOIN date ON transactions.order_date=date.date
 where date.year=2020 and transactions.market_code="Mark001";

#-- IT IS OBSERVED THAT THERE IS NEGATIVE SALES AMOUNT ENTERED 
# -- AND IN CURRENCY COLUMN 2 TRANSACTION HAVING USD AS CURRENCY
